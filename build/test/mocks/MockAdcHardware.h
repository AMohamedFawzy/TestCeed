/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKADCHARDWARE_H
#define _MOCKADCHARDWARE_H

#include "unity.h"
#include "AdcHardware.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void MockAdcHardware_Init(void);
void MockAdcHardware_Destroy(void);
void MockAdcHardware_Verify(void);




#define AdcHardware_Init_Ignore() AdcHardware_Init_CMockIgnore()
void AdcHardware_Init_CMockIgnore(void);
#define AdcHardware_Init_StopIgnore() AdcHardware_Init_CMockStopIgnore()
void AdcHardware_Init_CMockStopIgnore(void);
#define AdcHardware_Init_Expect() AdcHardware_Init_CMockExpect(__LINE__)
void AdcHardware_Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define AdcHardware_StartConversion_Ignore() AdcHardware_StartConversion_CMockIgnore()
void AdcHardware_StartConversion_CMockIgnore(void);
#define AdcHardware_StartConversion_StopIgnore() AdcHardware_StartConversion_CMockStopIgnore()
void AdcHardware_StartConversion_CMockStopIgnore(void);
#define AdcHardware_StartConversion_Expect() AdcHardware_StartConversion_CMockExpect(__LINE__)
void AdcHardware_StartConversion_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define AdcHardware_GetSampleComplete_IgnoreAndReturn(cmock_retval) AdcHardware_GetSampleComplete_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void AdcHardware_GetSampleComplete_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define AdcHardware_GetSampleComplete_StopIgnore() AdcHardware_GetSampleComplete_CMockStopIgnore()
void AdcHardware_GetSampleComplete_CMockStopIgnore(void);
#define AdcHardware_GetSampleComplete_ExpectAndReturn(cmock_retval) AdcHardware_GetSampleComplete_CMockExpectAndReturn(__LINE__, cmock_retval)
void AdcHardware_GetSampleComplete_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define AdcHardware_GetSample_IgnoreAndReturn(cmock_retval) AdcHardware_GetSample_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void AdcHardware_GetSample_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16 cmock_to_return);
#define AdcHardware_GetSample_StopIgnore() AdcHardware_GetSample_CMockStopIgnore()
void AdcHardware_GetSample_CMockStopIgnore(void);
#define AdcHardware_GetSample_ExpectAndReturn(cmock_retval) AdcHardware_GetSample_CMockExpectAndReturn(__LINE__, cmock_retval)
void AdcHardware_GetSample_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16 cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif

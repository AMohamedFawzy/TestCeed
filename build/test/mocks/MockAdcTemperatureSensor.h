/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKADCTEMPERATURESENSOR_H
#define _MOCKADCTEMPERATURESENSOR_H

#include "unity.h"
#include "AdcTemperatureSensor.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void MockAdcTemperatureSensor_Init(void);
void MockAdcTemperatureSensor_Destroy(void);
void MockAdcTemperatureSensor_Verify(void);




#define Adc_StartTemperatureSensorConversion_Ignore() Adc_StartTemperatureSensorConversion_CMockIgnore()
void Adc_StartTemperatureSensorConversion_CMockIgnore(void);
#define Adc_StartTemperatureSensorConversion_StopIgnore() Adc_StartTemperatureSensorConversion_CMockStopIgnore()
void Adc_StartTemperatureSensorConversion_CMockStopIgnore(void);
#define Adc_StartTemperatureSensorConversion_Expect() Adc_StartTemperatureSensorConversion_CMockExpect(__LINE__)
void Adc_StartTemperatureSensorConversion_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define Adc_TemperatureSensorSampleReady_IgnoreAndReturn(cmock_retval) Adc_TemperatureSensorSampleReady_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Adc_TemperatureSensorSampleReady_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define Adc_TemperatureSensorSampleReady_StopIgnore() Adc_TemperatureSensorSampleReady_CMockStopIgnore()
void Adc_TemperatureSensorSampleReady_CMockStopIgnore(void);
#define Adc_TemperatureSensorSampleReady_ExpectAndReturn(cmock_retval) Adc_TemperatureSensorSampleReady_CMockExpectAndReturn(__LINE__, cmock_retval)
void Adc_TemperatureSensorSampleReady_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define Adc_ReadTemperatureSensor_IgnoreAndReturn(cmock_retval) Adc_ReadTemperatureSensor_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Adc_ReadTemperatureSensor_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16 cmock_to_return);
#define Adc_ReadTemperatureSensor_StopIgnore() Adc_ReadTemperatureSensor_CMockStopIgnore()
void Adc_ReadTemperatureSensor_CMockStopIgnore(void);
#define Adc_ReadTemperatureSensor_ExpectAndReturn(cmock_retval) Adc_ReadTemperatureSensor_CMockExpectAndReturn(__LINE__, cmock_retval)
void Adc_ReadTemperatureSensor_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16 cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif

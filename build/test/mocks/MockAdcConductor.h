/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKADCCONDUCTOR_H
#define _MOCKADCCONDUCTOR_H

#include "unity.h"
#include "AdcConductor.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void MockAdcConductor_Init(void);
void MockAdcConductor_Destroy(void);
void MockAdcConductor_Verify(void);




#define AdcConductor_Init_Ignore() AdcConductor_Init_CMockIgnore()
void AdcConductor_Init_CMockIgnore(void);
#define AdcConductor_Init_StopIgnore() AdcConductor_Init_CMockStopIgnore()
void AdcConductor_Init_CMockStopIgnore(void);
#define AdcConductor_Init_Expect() AdcConductor_Init_CMockExpect(__LINE__)
void AdcConductor_Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define AdcConductor_Run_Ignore() AdcConductor_Run_CMockIgnore()
void AdcConductor_Run_CMockIgnore(void);
#define AdcConductor_Run_StopIgnore() AdcConductor_Run_CMockStopIgnore()
void AdcConductor_Run_CMockStopIgnore(void);
#define AdcConductor_Run_Expect() AdcConductor_Run_CMockExpect(__LINE__)
void AdcConductor_Run_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define AdcConductor_JustHereToTest_IgnoreAndReturn(cmock_retval) AdcConductor_JustHereToTest_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void AdcConductor_JustHereToTest_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define AdcConductor_JustHereToTest_StopIgnore() AdcConductor_JustHereToTest_CMockStopIgnore()
void AdcConductor_JustHereToTest_CMockStopIgnore(void);
#define AdcConductor_JustHereToTest_ExpectAndReturn(cmock_retval) AdcConductor_JustHereToTest_CMockExpectAndReturn(__LINE__, cmock_retval)
void AdcConductor_JustHereToTest_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define AdcConductor_AlsoHereToTest_IgnoreAndReturn(cmock_retval) AdcConductor_AlsoHereToTest_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void AdcConductor_AlsoHereToTest_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define AdcConductor_AlsoHereToTest_StopIgnore() AdcConductor_AlsoHereToTest_CMockStopIgnore()
void AdcConductor_AlsoHereToTest_CMockStopIgnore(void);
#define AdcConductor_AlsoHereToTest_ExpectAndReturn(cmock_retval) AdcConductor_AlsoHereToTest_CMockExpectAndReturn(__LINE__, cmock_retval)
void AdcConductor_AlsoHereToTest_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define AdcConductor_YetAnotherTest_IgnoreAndReturn(cmock_retval) AdcConductor_YetAnotherTest_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void AdcConductor_YetAnotherTest_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define AdcConductor_YetAnotherTest_StopIgnore() AdcConductor_YetAnotherTest_CMockStopIgnore()
void AdcConductor_YetAnotherTest_CMockStopIgnore(void);
#define AdcConductor_YetAnotherTest_ExpectAndReturn(cmock_retval) AdcConductor_YetAnotherTest_CMockExpectAndReturn(__LINE__, cmock_retval)
void AdcConductor_YetAnotherTest_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
